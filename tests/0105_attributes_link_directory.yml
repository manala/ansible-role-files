---

- name: "{{ test }}"
  hosts: debian
  become: true
  gather_facts: false
  tasks:

    # Default
    - tags: [default]
      block:
        - file:
            path: "{{ item }}"
            state: absent
          loop:
            - /tmp/link_directory
            - /tmp/directory
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_directory
                src: /tmp/directory
                state: link_directory
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [default]}" validate

    # Sub directory
    - tags: [sub_directory]
      block:
        - file:
            path: "{{ item }}"
            state: absent
          loop:
            - /tmp/link_directory_sub
            - /tmp/directory_sub
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_directory_sub
                src: /tmp/directory_sub/directory
                state: link_directory
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [sub_directory]}" validate

    # Permissions
    - tags: [permissions]
      block:
        - file:
            path: "{{ item }}"
            state: absent
          loop:
            - /tmp/link_permissions
            - /tmp/directory_permissions
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_permissions
                src: /tmp/directory_permissions
                user: backup
                group: games
                state: link_directory
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [permissions]}" validate

    # Wrong link
    - tags: [link_wrong]
      block:
        - file:
            path: /tmp/directory_wrong
            state: directory
        - file:
            path: /tmp/link_directory_right
            src: /tmp/directory_wrong
            state: link
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_directory_right
                src: /tmp/directory_right
                state: link_directory
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [link_wrong]}" validate

    # Link parents
    - tags: [link_parents]
      block:
        - file:
            path: "{{ item }}"
            state: absent
          loop:
            - /tmp/link_parents_true
            - /tmp/link_parents_false
            - /tmp/directory_link_parents
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_parents_true/link
                src: /tmp/directory_link_parents
                state: link_directory
                parents: true
              - path: /tmp/link_parents_false/link
                src: /tmp/directory_link_parents
                state: link_directory
      rescue:
        - debug:
            msg: A planned error has been caught...
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [link_parents]}" validate

    # Link as existing file
    - tags: [link_file]
      block:
        - file:
            path: /tmp/link_as_existing_file_force
            state: touch
        - file:
            path: /tmp/link_as_existing_file
            state: touch
        - file:
            path: /tmp/directory_existing_file
            state: directory
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_as_existing_file_force
                src: /tmp/directory_existing_file
                state: link_directory
                force: true
              - path: /tmp/link_as_existing_file
                src: /tmp/directory_existing_file
                state: link_directory
      rescue:
        - debug:
            msg: A planned error has been caught...
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [link_file]}" validate

    # Link as existing empty directory
    - tags: [link_directory_empty]
      block:
        - file:
            path: /tmp/link_as_existing_directory_empty_force
            state: directory
        - file:
            path: /tmp/link_as_existing_directory_empty
            state: directory
        - file:
            path: /tmp/directory_existing_directory_empty
            state: directory
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_as_existing_directory_empty_force
                src: /tmp/directory_existing_directory_empty
                state: link_directory
                force: true
              - path: /tmp/link_as_existing_directory_empty
                src: /tmp/directory_existing_directory_empty
                state: link_directory
      rescue:
        - debug:
            msg: A planned error has been caught...
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [link_directory_empty]}" validate

    # Link as existing full directory
    - tags: [link_directory_full]
      block:
        - file:
            path: /tmp/link_as_existing_directory_full_force
            state: "{{ item }}"
          loop: [absent, directory]
        - file:
            path: /tmp/link_as_existing_directory_full_force/file
            state: touch
        - file:
            path: /tmp/link_as_existing_directory_full
            state: "{{ item }}"
          loop: [absent, directory]
        - file:
            path: /tmp/link_as_existing_directory_full/file
            state: touch
        - file:
            path: /tmp/directory_existing_directory_full
            state: directory
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_as_existing_directory_full_force
                src: /tmp/directory_existing_directory_full
                state: link_directory
                force: true
              - path: /tmp/link_as_existing_directory_full
                src: /tmp/directory_existing_directory_full
                state: link_directory
      rescue:
        - debug:
            msg: A planned error has been caught...
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [link_directory_full]}" validate

    # Directory as existing file
    - tags: [directory_file]
      block:
        - file:
            path: /tmp/directory_as_existing_file_force
            state: touch
        - file:
            path: /tmp/directory_as_existing_file
            state: touch
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_directory_existing_file_force
                src: /tmp/directory_as_existing_file_force
                state: link_directory
                force: true
              - path: /tmp/link_directory_existing_file
                src: /tmp/directory_as_existing_file
                state: link_directory
      rescue:
        - debug:
            msg: A planned error has been caught...
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [directory_file]}" validate

    # Directory as existing link to file
    - tags: [directory_link_file]
      block:
        - file:
            path: /tmp/file_directory_as_existing_link_file_force
            state: touch
        - file:
            path: /tmp/directory_as_existing_link_file_force
            state: absent
        - file:
            path: /tmp/directory_as_existing_link_file_force
            src: /tmp/file_directory_as_existing_link_file_force
            state: link
        - file:
            path: /tmp/file_directory_as_existing_link_file
            state: touch
        - file:
            path: /tmp/directory_as_existing_link_file
            src: /tmp/file_directory_as_existing_link_file
            state: link
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_directory_existing_link_file_force
                src: /tmp/directory_as_existing_link_file_force
                state: link_directory
                force: true
              - path: /tmp/link_directory_existing_link_file
                src: /tmp/directory_as_existing_link_file
                state: link_directory
      rescue:
        - debug:
            msg: A planned error has been caught...
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [directory_link_file]}" validate

    # Directory as existing link to directory
    - tags: [directory_link_directory]
      block:
        - file:
            path: /tmp/directory_directory_as_existing_link_directory_force
            state: directory
        - file:
            path: /tmp/directory_as_existing_link_directory_force
            state: absent
        - file:
            path: /tmp/directory_as_existing_link_directory_force
            src: /tmp/directory_directory_as_existing_link_directory_force
            state: link
        - file:
            path: /tmp/directory_directory_as_existing_link_directory
            state: directory
        - file:
            path: /tmp/directory_as_existing_link_directory
            src: /tmp/directory_directory_as_existing_link_directory
            state: link
        - import_role:
            name: manala.files
          vars:
            manala_files_attributes:
              - path: /tmp/link_directory_existing_link_directory_force
                src: /tmp/directory_as_existing_link_directory_force
                state: link_directory
                force: true
              - path: /tmp/link_directory_existing_link_directory
                src: /tmp/directory_as_existing_link_directory
                state: link_directory
      always:
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml --vars-inline "{tags: [directory_link_directory]}" validate
